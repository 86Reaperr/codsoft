import os

def print_board(board):
    for i in range(0, 9, 3):
        print(f" {board[i]} | {board[i+1]} | {board[i+2]} ")
        if i < 6:
            print("---|---|---")

def check_win(board):
    patterns = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],  
        [0, 3, 6], [1, 4, 7], [2, 5, 8],  
        [0, 4, 8], [2, 4, 6]              
    ]



    for p in patterns:
        if board[p[0]] == board[p[1]] == board[p[2]]:
            return 1 if board[p[0]] == 'X' else -1 if board[p[0]] == 'O' else None
    return 0 if all(isinstance(x, str) for x in board) else None

def minimax(board, is_max):
    result = check_win(board)
    if result is not None:
        return result

    best_score = float('-inf') if is_max else float('inf')
    for i in range(9):
        if isinstance(board[i], int):
            board[i] = 'X' if is_max else 'O'
            score = minimax(board, not is_max)
            board[i] = i
            if is_max:
                best_score = max(score, best_score)
            else:
                best_score = min(score, best_score)
    return best_score




def ai_move(board):
    best_score = float('-inf')
    best_move = None
    for i in range(9):
        if isinstance(board[i], int):
            board[i] = 'X'
            score = minimax(board, False)
            board[i] = i
            if score > best_score:
                best_score = score
                best_move = i
    board[best_move] = 'X'




if __name__ == "__main__":
    board = list(range(9))
    player = 'O'
    while True:
        os.system('cls' if os.name == 'nt' else 'clear')
        print_board(board)
        if player == 'O':
            try:
                move = int(input("\nEnter position (0-8): "))
                if board[move] == 'O' or board[move] == 'X':
                    print("Position taken, try again.")
                    continue
                board[move] = 'O'
            except (ValueError, IndexError):
                print("\nInvalid input, please try again.")
                continue
        else:
            ai_move(board)

        result = check_win(board)
        os.system('cls' if os.name == 'nt' else 'clear')
        print_board(board)
        if result == 1:
            print("X wins!")
            break
        elif result == -1:
            print("O wins!")
            break
        elif result == 0:
            print("It's a draw!")
            break
        player = 'O' if player == 'X' else 'X'
